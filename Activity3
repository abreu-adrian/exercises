# Activity 3: Plot relative abundance for the treatment groups at species level (hint - use the Species_fullname column).

ps_species <- ps %>%
  tax_glom(taxrank = "Species_fullname") %>% # agglomerate at the genus level
  transform_sample_counts(function(x) x*100 / sum(x)) # relativise sample counts

# Melt the phyloseq object.  
ps_melt = psmelt(ps_species)

# Order based on abundance.
ps_ord <- ps_melt %>%
  group_by(Species_fullname) %>%
  summarize_at("Abundance", sum) %>% # add total abundance of each genus
  arrange(dplyr::desc(Abundance)) %>% # descending order
  mutate(rel_abund = Abundance/sum(Abundance)*100) # add relative abundance of each genus

# Filter for the top 10 genera.
species_top10 = ps_ord$Species_fullname[1:10] # create a list of top 10 genera names
ps_species_top10_melt = subset_taxa(ps_species, as.data.frame(tax_table(ps_species))$Species_fullname %in% species_top10) %>% # select the top 10 genera
  psmelt() 
unique(ps_species_top10_melt$Species_fullname) # view the top 10 genera names 

# Plot relative abundance.
nb.cols <- 10 # specify how many colors you will need
mycolors <- colorRampPalette(brewer.pal(10, "PiYG"))(nb.cols) # for more palette options: https://r-graph-gallery.com/38-rcolorbrewers-palettes.html

ps_species_top10_melt$Treatment_Group <- factor(ps_species_top10_melt$Treatment_Group, levels = c("Control", "Abx", "Abx+C.albicans")) # order categories 
fig_species_top10 <- ggplot(ps_species_top10_melt, aes (x = Treatment_Group, y = Abundance, color = Species_fullname, fill = Species_fullname)) +
  geom_bar(stat = "identity", position = "fill") + 
  theme_bw() + 
  scale_y_continuous(labels = scales::percent) +
  labs(x = "Treatment", y = "Relative abundance") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 12), 
        legend.text = element_text(face = "italic"),
        axis.text.x = element_text(size = 12, angle = 0, vjust = 0.5, hjust = 0.5),
        axis.text.y = element_text(size = 12, angle = 0, vjust = 0.5, hjust = 0.5),
        axis.title = element_text(size = 16, face = "bold")) +
  scale_fill_manual(values=mycolors) +
  scale_color_manual(values = mycolors)
fig_species_top10
